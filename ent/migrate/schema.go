// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NewsColumns holds the columns for the "news" table.
	NewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"draft", "published", "hidden"}, Default: "draft"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 512},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "author_id", Type: field.TypeUUID, Nullable: true},
	}
	// NewsTable holds the schema information for the "news" table.
	NewsTable = &schema.Table{
		Name:       "news",
		Columns:    NewsColumns,
		PrimaryKey: []*schema.Column{NewsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "news_users_news_edges",
				Columns:    []*schema.Column{NewsColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "work_email", Type: field.TypeString, Size: 255},
		{Name: "oid", Type: field.TypeString, Unique: true, Size: 255},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NewsTable,
		UsersTable,
	}
)

func init() {
	NewsTable.ForeignKeys[0].RefTable = UsersTable
}
